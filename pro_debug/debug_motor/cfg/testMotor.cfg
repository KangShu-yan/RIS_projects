#! /usr/bin/env python

PACKAGE='debug_motor'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name       Type      Level Description                Default Min   Max
control_mode_enum = gen.enum([ gen.const("no_control_mode", int_t, 0, "No control "),
	gen.const("speed_control", int_t, 1, "Enable speed control") ,
	gen.const("torque_control", int_t, 2, "Enable torque control"),
	gen.const("motor_power_on", int_t, 3, "Enable power on control"),
	gen.const("motor_power_off", int_t, 4, "Enable power off control"),
	gen.const("motor_sysch_enable", int_t, 5, "Enable syschronic control"),
	gen.const("constant_acce_speed", int_t, 6, "Enable accelerate test control  with respect to speed "),
	gen.const("motor_acce_torque", int_t, 7, "Enable accelerate test control  with respect to torque"),
	gen.const("sine_speed_mode", int_t, 8, "Enable accelerate test control  with respect to speed"),
	 ],"An enum to set the contorl mode.")
gen.add("control_mode", int_t,    0,    "A contorl_mode parameter which is edited via an enum.", 0,0,8, edit_method=control_mode_enum)

gen.add("set_rpm_1",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_1",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("set_rpm_2",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_2",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("set_rpm_3",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_3",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("set_rpm_4",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_4",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("set_rpm_5",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_5",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("set_rpm_6",  int_t,   0,    "Setting speed with 0.01rpm.",  0,-300,300)
gen.add("set_current_6",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -10,10)
gen.add("limited_speed",  int_t,   0,    "Setting speed with 0.01N.m.", 0, -280,280)
gen.add("limited_current",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -50,50)



gen.add("send_CAN", bool_t,    0,    "enable.",   False)

exit(gen.generate(PACKAGE, "m_test_node", "motorTest"))
