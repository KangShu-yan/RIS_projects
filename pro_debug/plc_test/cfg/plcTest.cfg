#! /usr/bin/env python

PACKAGE='plc_test'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name       Type      Level Description                Default Min   Max
PLC_control_mode_enum = gen.enum([ gen.const("no_control_mode", int_t, 0, "No control "),
	gen.const("suspension_speed_control", int_t, 1, "Enable speed control") ,
	gen.const("suspension_angle_control", int_t, 2, "Enable position control"),
	gen.const("suspension_position_control", int_t, 3, "Enable position control"),
	gen.const("suspension_pressure_control", int_t, 4, "Enable position control"),
	gen.const("motor_control_power_on", int_t, 5, "Enable power on control"),
	gen.const("motor_control_power_off", int_t, 6, "Enable power off control"),
	gen.const("motor_main_power_on", int_t, 7, "Enable power on control"),
	gen.const("motor_main_power_off", int_t, 8, "Enable power off control"),
	 ],"An enum to set the suspension contorl .")
gen.add("PLC_control_mode", int_t,    0,    "A contorl_mode parameter which is edited via an enum.", 0,0,8, edit_method=PLC_control_mode_enum)

gen.add("set_current_1",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -50000,50000)
gen.add("set_angle_1",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_1",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_1",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("set_current_2",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_angle_2",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_2",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_2",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("limited_angle_1_2",  int_t,   0,    "Setting speed with 0.01N.m.", 0, -5000,50000)
gen.add("limited_current_1_2",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
#gen.add("send_forsusp_confirm", bool_t,    0,    "enable.",   False)

gen.add("set_current_3",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_angle_3",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_3",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_3",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("set_current_4",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_angle_4",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_4",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_4",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("limited_angle_3_4",  int_t,   0,    "Setting speed with 0.01N.m.", 0, -5000,50000)
gen.add("limited_current_3_4",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
#gen.add("send_medsusp_confirm", bool_t,    0,    "enable.",   False)

gen.add("set_current_5",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_angle_5",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_5",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_5",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("set_current_6",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_angle_6",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_position_6",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)
gen.add("set_pressure_6",  int_t,   0,    "Setting pressure with 0.01N.m.", 0, -5000,50000)
gen.add("limited_angle_5_6",  int_t,   0,    "Setting speed with 0.01N.m.", 0, -5000,50000)
gen.add("limited_current_5_6",  int_t,   0,    "Setting torque with 0.01N.m.", 0, -5000,50000)

gen.add("send_confirm", bool_t,    0,    "enable.",   False)
exit(gen.generate(PACKAGE, "plc_test_node", "plcTest"))
